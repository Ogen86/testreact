{"version":3,"sources":["components/DropDownMenu/DropDownToggleButton.jsx","components/navBar/NavBar.jsx","components/DropDownMenu/DropDown.jsx","components/BackDrop/BackDrop.jsx","components/Homepage/HomePage.jsx","components/DiceGenerator/diceSide.jsx","components/DiceGenerator/successRate.jsx","components/DiceGenerator/diceNumber.jsx","components/DiceGenerator/diceGenerator.jsx","components/NewsFeed/NewsFeed.jsx","App.js","serviceWorker.js","index.js"],"names":["DropDownToggleButton","props","className","onClick","click","NavBar","dropClickHandler","to","DropDown","dropDownClasses","show","BackDrop","HomePage","state","Component","DiceSide","number","this","doSideSet","Fragment","sides","sideSet","SuccessRate","rate","event","setState","target","value","handleChange","type","placeholder","name","min","onChange","bind","DiceNumber","doDecrement","numbers","doIncrement","DiceGenerator","result","dieNumber","newSide","newRate","max","rollNumber","genRes","Math","floor","random","handleSideSetting","handleIncrement","handleDecrement","handleRateSetting","handleGenerate","NewsFeed","App","dropDownOpen","dropDownToggleHandler","prevState","backDropClickHandler","backDrop","history","HashHistory","style","height","marginTop","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19137f21.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./DropDownToggleButton.css\";\r\n\r\nconst DropDownToggleButton = props => (\r\n  <button className=\"toggleButton\" onClick={props.click}>\r\n    <div className=\"toggleButton_line\" />\r\n    <div className=\"toggleButton_line\" />\r\n    <div className=\"toggleButton_line\" />\r\n  </button>\r\n);\r\n\r\nexport default DropDownToggleButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./NavBar.css\";\r\nimport DropDownToggleButton from \"../DropDownMenu/DropDownToggleButton\";\r\n\r\nconst NavBar = props => (\r\n  <header className=\"NavBar\">\r\n    <nav className=\"NavBar_navigation\">\r\n      <div className=\"ToggleButton\">\r\n        <DropDownToggleButton click={props.dropClickHandler} />\r\n      </div>\r\n      <div className=\"NavBar_Logo\">\r\n        <Link to=\"Home\">Logo </Link>\r\n      </div>\r\n      <div className=\"spacer\" />\r\n      <div className=\"NavBar_navigation_items\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"Dice_generation\">dice generation</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"News\">news</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./DropDown.css\";\r\n\r\nconst DropDown = props => {\r\n  let dropDownClasses = \"DropDown\";\r\n  if (props.show) {\r\n    dropDownClasses = \"DropDown open\";\r\n  }\r\n  return (\r\n    <nav className={dropDownClasses}>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"Dice_generation\">dice generator</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"News\">news</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React from \"react\";\r\n\r\nimport \"./BackDrop.css\";\r\n\r\nconst BackDrop = props => (\r\n  <div className=\"BackDrop\" onClick={props.click}></div>\r\n);\r\n\r\nexport default BackDrop;\r\n","import React, { Component } from \"react\";\r\n\r\nclass HomePage extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>HomePage</h1>\r\n        <h2>Work in progress!</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DiceSide extends Component {\r\n  sideSet(number) {\r\n    this.props.doSideSet(number);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span className=\"badge badge-primary m-2\">\r\n          The simulated dice side number:\r\n        </span>\r\n        <h1 className=\"badge badge-primary m-2\">{this.props.sides}</h1>\r\n        <button\r\n          onClick={() => this.sideSet(4)}\r\n          className=\"btn btn-secondary btn-sm m-1\"\r\n        >\r\n          4 side\r\n        </button>\r\n        <button\r\n          onClick={() => this.sideSet(6)}\r\n          className=\"btn btn-secondary btn-sm m-1\"\r\n        >\r\n          6 side\r\n        </button>\r\n        <button\r\n          onClick={() => this.sideSet(8)}\r\n          className=\"btn btn-secondary btn-sm m-1\"\r\n        >\r\n          8 side\r\n        </button>\r\n        <button\r\n          onClick={() => this.sideSet(10)}\r\n          className=\"btn btn-secondary btn-sm m-1\"\r\n        >\r\n          10 side\r\n        </button>\r\n        <button\r\n          onClick={() => this.sideSet(12)}\r\n          className=\"btn btn-secondary btn-sm m-1\"\r\n        >\r\n          12 side\r\n        </button>\r\n        <button\r\n          onClick={() => this.sideSet(20)}\r\n          className=\"btn btn-secondary btn-sm m-1\"\r\n        >\r\n          20 side\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DiceSide;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SuccessRate extends Component {\r\n  state = {\r\n    rate: 0\r\n  };\r\n\r\n  handleChange(event) {\r\n    this.setState({ rate: event.target.value });\r\n    this.props.handleChange(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span className=\"badge badge-primary m-2\">\r\n          the success rate of the throw :\r\n        </span>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"please give a success rate\"\r\n          name=\"success rate\"\r\n          min={1}\r\n          value={this.state.rate}\r\n          onChange={this.handleChange.bind(this)}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SuccessRate;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DiceNumber extends Component {\r\n  state = {\r\n    number: 1\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span className=\"badge badge-primary m-2\">the number of die :</span>\r\n        <button\r\n          onClick={() => this.props.doDecrement()}\r\n          className=\"btn btn-secondary btn-sm m-1\"\r\n        >\r\n          -\r\n        </button>\r\n        <span className=\"badge badge-primary m-2\"> {this.props.numbers} </span>\r\n        <button\r\n          onClick={() => this.props.doIncrement()}\r\n          className=\"btn btn-secondary btn-sm m-1\"\r\n        >\r\n          +\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DiceNumber;\r\n","import React, { Component } from \"react\";\r\nimport DiceSide from \"./diceSide\";\r\nimport SuccessRate from \"./successRate\";\r\nimport DiceNumber from \"./diceNumber\";\r\n\r\nconst getRandomInt = (min, max) => {\r\n  return Math.floor(Math.random() * max - min + 1) + min;\r\n};\r\n\r\nclass DiceGenerator extends Component {\r\n  state = {\r\n    result: 0,\r\n    sides: 0,\r\n    dieNumber: 1,\r\n    rate: 0\r\n  };\r\n\r\n  handleSideSetting(newSide) {\r\n    this.setState({ sides: newSide });\r\n  }\r\n\r\n  handleIncrement() {\r\n    this.setState({ dieNumber: this.state.dieNumber + 1 });\r\n  }\r\n\r\n  handleDecrement() {\r\n    if (this.state.dieNumber > 0)\r\n      this.setState({ dieNumber: this.state.dieNumber - 1 });\r\n  }\r\n\r\n  handleRateSetting(newRate) {\r\n    this.setState({ rate: newRate });\r\n  }\r\n\r\n  handleGenerate() {\r\n    let rollNumber = 0;\r\n    let genRes = 0;\r\n    this.setState({ result: 0 });\r\n    for (rollNumber = 0; rollNumber < this.state.dieNumber; rollNumber++) {\r\n      if (getRandomInt(1, this.state.sides) >= this.state.rate) genRes++;\r\n    }\r\n    this.setState({ result: genRes });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <DiceSide\r\n            sides={this.state.sides}\r\n            doSideSet={this.handleSideSetting.bind(this)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <DiceNumber\r\n            numbers={this.state.dieNumber}\r\n            doIncrement={this.handleIncrement.bind(this)}\r\n            doDecrement={this.handleDecrement.bind(this)}\r\n          />\r\n          <SuccessRate handleChange={this.handleRateSetting.bind(this)} />\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={this.handleGenerate.bind(this)}\r\n            className=\"btn btn-secondary btn-sm m-1\"\r\n          >\r\n            Generate\r\n          </button>\r\n          <h2>roll result: {this.state.result}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DiceGenerator;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NewsFeed extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>NewsFeed</h1>\r\n        <h2> Work In Progress!</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewsFeed;\r\n","import React, { Component } from \"react\";\n\nimport NavBar from \"./components/navBar/NavBar\";\nimport DropDown from \"./components/DropDownMenu/DropDown\";\nimport BackDrop from \"./components/BackDrop/BackDrop\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport { HashHistory } from \"history\";\n\nimport HomePage from \"./components/Homepage/HomePage\";\nimport DiceGenerator from \"./components/DiceGenerator/diceGenerator\";\nimport NewsFeed from \"./components/NewsFeed/NewsFeed\";\n\nclass App extends Component {\n  state = {\n    dropDownOpen: false\n  };\n\n  dropDownToggleHandler = () => {\n    this.setState(prevState => {\n      return { dropDownOpen: !prevState.dropDownOpen };\n    });\n  };\n\n  backDropClickHandler = () => {\n    this.setState({ dropDownOpen: false });\n  };\n\n  render() {\n    let backDrop;\n\n    if (this.state.dropDownOpen) {\n      backDrop = <BackDrop click={this.backDropClickHandler} />;\n    }\n    return (\n      <Router history={HashHistory}>\n        <div style={{ height: \"100%\" }}>\n          <NavBar dropClickHandler={this.dropDownToggleHandler} />\n          <DropDown show={this.state.dropDownOpen} />\n          {backDrop}\n          <main style={{ marginTop: \"64px\" }}>\n            <Switch>\n              <Route exact path=\"/Home\" component={HomePage}>\n                <HomePage />\n              </Route>\n              <Route path=\"/Dice_generation\" component={DiceGenerator}>\n                <DiceGenerator />\n              </Route>\n              <Route path=\"/News\" component={NewsFeed}>\n                <NewsFeed />\n              </Route>\n            </Switch>\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}